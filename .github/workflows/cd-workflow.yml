---

name: Build

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"

jobs:
  test:
    name: Docker Build and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build image.
        run: docker build -t azure-tools .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          # https://github.com/marketplace/actions/aqua-security-trivy
          exit-code: '1'
          format: 'table'
          ignore-unfixed: true
          image-ref: 'azure-tools'
          scanners: vuln
          severity: 'HIGH'
          timeout: '10m0s'
          vuln-type: 'os,library'

      - name: Run the built image.
        run: docker run --name test-container --entrypoint "/bin/sleep" -d --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro azure-tools 60

        # TODO: simple test - need expanding
      - name: Verify tools are accessible in the built image.
        run: |
          set -e
          docker exec --tty test-container env TERM=xterm terraform version
          docker exec --tty test-container env TERM=xterm packer version
          docker exec --tty test-container env TERM=xterm az version
          docker exec --tty test-container env TERM=xterm git version
          docker exec --tty test-container env TERM=xterm pwsh -version
          docker exec --tty test-container env TERM=xterm pwsh -c "Get-Module -ListAvailable"


  Build-and-Push-Docker-Image:
    runs-on: ubuntu-latest
    needs: test
    name: Docker Build, Tag, Push

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # https://github.com/docker/metadata-action
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          ghcr.io/${{ github.repository }}
        tags: |
          type=schedule,pattern={{date 'YYYYMMDD'}}
          type=sha
          type=semver,pattern={{version}}
        flavor: |
          latest=true

    - name: Push image
      uses: docker/build-push-action@v4
      with:
        tags: ${{ steps.meta.outputs.tags }}
        context: .
        push: true
